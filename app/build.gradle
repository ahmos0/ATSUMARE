plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.apollographql.apollo3'
}

def localProperties = new Properties()
localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

def awsAccessKey = localProperties['awsAccessKey'] ?: ""
def awsSecretKey = localProperties['awsSecretKey'] ?: ""
def awsEndpoint = localProperties['awsEndpoint'] ?: ""

android {
    signingConfigs {
        config {
            storeFile file('../new_keystore.keystore')
            storePassword 'hogeRita24g'
            keyAlias 'new_alias'
            keyPassword 'hogeRita24g'
        }
    }

    buildFeatures {
        buildConfig true
    }

    namespace 'com.example.googlemapapi'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.googlemapapi"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "AWS_ACCESS_KEY", "\"${awsAccessKey}\""
        buildConfigField "String", "AWS_SECRET_KEY", "\"${awsSecretKey}\""
        buildConfigField "String", "AWS_ENDPOINT", "\"${awsEndpoint}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/io.netty.versions.properties'
    }
}

apollo {

    service("YourServiceName") {
        packageName.set("com.example.googlemapapi")
    }
}



dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation 'com.google.android.libraries.places:places:3.2.0'
    implementation 'com.google.maps.android:places-ktx:2.0.0'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.7.4'
    implementation 'com.google.android.gms:play-services-wallet:19.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation "androidx.navigation:navigation-compose:2.7.4"
    //implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.20'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10'
    //implementation("aws.sdk.kotlin:dynamodb:0.9.4-beta")
    /*implementation("aws.sdk.kotlin:sns:0.9.4-beta")  {
        exclude group: "xmlpull", module: "xmlpull"
    }*/
    implementation(platform("software.amazon.awssdk:bom:2.20.56"))
    implementation("software.amazon.awssdk:dynamodb")
    implementation("software.amazon.awssdk:dynamodb-enhanced")
    implementation 'com.apollographql.apollo3:apollo-runtime:3.8.2'
    implementation'com.apollographql.apollo3:apollo-api:3.8.2'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
}